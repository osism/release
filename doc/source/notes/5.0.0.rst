=====
5.0.0
=====

.. warning::

   Release 5.0.0 is currently under development. It is not available at the moment.

Features
========

* `OpenStack Services Action <https://github.com/marketplace/actions/openstack-services-action>`_ now
  uses OpenStack Zed as the default OpenStack release
* `Mitogen <https://mitogen.networkgenomics.com/ansible_detailed.html>`_ is installed
  in all Ansible containers and can be used

  The use of the Mitogen strategy plugin for Ansible can be enabled via ``ansible.cfg``
  in the ``environments`` directory

  .. code-block:: ini

     [defaults]
     strategy_plugins = /usr/share/ansible/plugins/mitogen/ansible_mitogen/plugins/strategy
     strategy = mitogen_linear

* The testbed has been significantly simplified for new operators and developers and a Quick Start
  guide has been added
* In order to avoid having to install the manager and, if necessary, the control nodes
  manually when setting up a new OSISM environment, an ISO image is now available.
  `osism/node-image <https://github.com/osism/node-image>`_ automatically installs a new
  node with Ubuntu 22.04 on a software RAID 1 and prepares everything to be able to start
  directly.
* With the playbook ``ceph-purge-storage-node`` it is possible to remove all Ceph services
  on a Ceph storage node and remove all Ceph related data and configuration files.
* With the playbook ``ceph-purge-cluster`` it is possible to remove all Ceph services
  on all Ceph nodes and remove all Ceph related data and configuration files.
* `Netbox plugin OSISM <https://github.com/osism/netbox-plugin-osism>`_ now published
  at `PyPI <https://pypi.org/project/netbox-plugin-osism/>`_
* With the Ansible role ``osism.services.osquery`` `osquery <https://www.osquery.io>`_
  can be deployed. osquery uses basic SQL commands to leverage a relational data-model to
  describe a device. It will be used in OSISM in the future to obtain facts about system
  states.

OpenStack image manager
-----------------------

* Some of the images (Almalinux, Rockylinux, Ubuntu) defined in ``etc/images`` are now
  automatically updated once a week
* `OpenStack image manager <https://github.com/osism/openstack-image-manager>`_ now published
  at `PyPI <https://pypi.org/project/openstack-image-manager/>`_
* A container image ``harbor.services.osism.tech/osism/openstack-image-manager:latest`` is
  now available which also contains the default image definitions in ``/etc/openstack-image-manager``
* It is possible to define meta-information to individual versions of an image

  .. code-block:: yaml

     - name: Sample image
       [...]
       meta:
         architecture: x86_64
       versions:
         - version: '1.0'
           [...]
           meta:
             image_build_date: YYYY-MM-DD

* With the ``--validate`` parameter, it is possible to check the images available on an
  OpenStack environment for conformity with the Sovereign Cloud Stack (SCS) image standard.
* With the ``--check`` parameter, it is possible to check the correctness of local image
  definitions.
* With the parameter ``--filter`` it is possible to filter the list of images to be processed
  by their names with regular expressions. E.g. ``--filter "Ubuntu 2\d.\d\d"`` can be used
  to process all Ubuntu images with a version >= 20.04.
* The ``--images`` parameter can now be passed a single file in addition to a directory with
  YAML files with included image definitions
* All parameters marked as mandatory by the Sovereign Cloud Stack (SCS) image standard are
  now set or requested accordingly if they are not set.

OSISM manager
-------------

* Support for routeros, which could be used to control Mikrotik devices, has been removed.
  Mikrotik devices were only used by the OSISM project itself in a baremetal testbed. Due
  to the change of the network hardware used by the OSISM project, only SONiC will be
  supported as NOS in the future.
* If `osism <https://pypi.org/project/osism/>`_ is installed via PyPI, Ansible is no longer
  installed as a dependency. This ensures that the services can also be used with older
  Ansible versions. If Ansible is to be installed as well, this can be done via an extra
  requirement using ``osism[ansible]``.
* Since only SONiC will be supported in the future, the following Ansible collections,
  which were previously available as technical previews, have been removed: ``arista.cvp``,
  ``arista.eos``, ``juniper.device``.
* The new Ansible collection `osism.sonic <https://github.com/osism-sonic/ansible-collection-sonic>`_,
  a downstream of
  `dellemc.enterprise_sonic <https://github.com/ansible-collections/dellemc.enterprise_sonic>`_,
  is used to manage SONiC.
* With ``enable_auditd`` it is possible to disable the ``osism.services.auditd`` role
  in the bootstrap and maintenance playbooks
* With the ``dump facts`` command, it is possible to output the facts of Ansible for
  specific systems.

  .. code-block:: console

     $ osism dump facts mgr003
     +--------+---------------------------------------------+----------------------------------------------------------------+
     | Host   | Fact                                        | Value                                                          |
     +========+=============================================+================================================================+
     | mgr003 | _ansible_facts_gathered                     | True                                                           |
     +--------+---------------------------------------------+----------------------------------------------------------------+
     | mgr003 | ansible_all_ipv4_addresses                  | ['10.20.3.3', '10.15.0.112']                                   |
     +--------+---------------------------------------------+----------------------------------------------------------------+
     [...]

  .. code-block:: console

     $ osism dump facts mgr003 ansible_memory_mb
     +--------+-------------------+------------------------------------------------------------+
     | Host   | Fact              | Value                                                      |
     +========+===================+============================================================+
     | mgr003 | ansible_memory_mb | { 'nocache': {'free': 127134, 'used': 1551},               |
     |        |                   |   'real': {'free': 122304, 'total': 128685, 'used': 6381}, |
     |        |                   |   'swap': { 'cached': 0,                                   |
     |        |                   |             'free': 8191,                                  |
     |        |                   |             'total': 8191,                                 |
     |        |                   |             'used': 0}}                                    |
     +--------+-------------------+------------------------------------------------------------+

* With the ``log ansible`` command, it is possible to use the shell of `ARA <https://ara.readthedocs.io/en/latest/index.html>`_.

  .. code-block:: console

     $ osism log ansible
     (ara) help

     Documented commands (use 'help -v' for verbose/'help <topic>' for details):
     ===========================================================================
     alias  exit  history  quit          run_script  shell
     edit   help  macro    run_pyscript  set         shortcuts

     Application commands (type help <topic>):
     =========================================
     complete     host metrics  playbook delete   record delete  result show
     expire       host show     playbook list     record list    task delete
     help         play delete   playbook metrics  record show    task list
     host delete  play list     playbook prune    result delete  task metrics
     host list    play show     playbook show     result list    task show

  .. code-block:: console

     $ osism log ansible playbook list
     +------+-----------+-------------------------------+--------+-----------------+----------------------------+-------+---------+-------+-----------------------------+-----------------+
     |   id | status    | controller                    | user   | ansible_version | path                       | tasks | results | hosts | started                     | duration        |
     +------+-----------+-------------------------------+--------+-----------------+----------------------------+-------+---------+-------+-----------------------------+-----------------+
     | 2322 | completed | osism-ansible.manager_default | dragon | 2.13.7          | /ansible/generic/facts.yml |     3 |      18 |     6 | 2022-12-30T09:19:30.587307Z | 00:00:15.500605 |
     | 2321 | completed | osism-ansible.manager_default | dragon | 2.13.7          | /ansible/generic/facts.yml |     3 |      17 |     6 | 2022-12-30T09:09:30.589686Z | 00:00:15.680527 |
     | 2320 | completed | osism-ansible.manager_default | dragon | 2.13.7          | /ansible/generic/facts.yml |     3 |      17 |     6 | 2022-12-30T08:59:30.577125Z | 00:00:15.524505 |
     | 2319 | completed | osism-ansible.manager_default | dragon | 2.13.7          | /ansible/generic/facts.yml |     3 |      18 |     6 | 2022-12-30T08:49:30.608174Z | 00:00:15.567697 |
     +------+-----------+-------------------------------+--------+-----------------+----------------------------+-------+---------+-------+-----------------------------+-----------------+

* With the ``log container`` command, it is possible to get the logs of a container.

  .. code-block:: console

     $ osism log container mgr003 fluentd
     + sudo -E kolla_set_configs
     INFO:__main__:Loading config file at /var/lib/kolla/config_files/config.json
     INFO:__main__:Validating config file
     INFO:__main__:Kolla config strategy set to: COPY_ALWAYS
     INFO:__main__:Copying service configuration files
     [...]

* With the ``validate`` command, it is possible to run validators, e.g. for Ceph. If you call the
  ``validate`` command without further parameters, all available validators will be displayed.

  The validators used are available in the Ansible collection
  `osism.validations <https://github.com/osism/ansible-collection-validations>`_.

  .. code-block:: console

     $ osism validate ulimits

     PLAY [Run ulimits validator] ***************************************************

     TASK [osism.validations.ulimits : Get nofiles limit] ***************************
     ok: [mgr003]
     [...]

Deprecations
============

* The role ``osism.services.bird`` is deprecated. In future, FRRouting (``osism.services.frr``)
  will be used.
* The role ``osism.services.minikube`` is deprecated. In future ``osism.services.k8s``
  will be used.
* Heat is deprecated in favor of more generic Infrastructure as Code tools like Terraform
  as of now and will be removed in the future (exact removal date is not yet known)
* Magnum (currently available as Technical Preview) will be removed in favor of Gardener and
  Cluster API
* Mistral (currently available as Technical Preview) will be removed
* Swift (currently available as Technical Preview) will be removed in favor of Ceph RGW
* Trove (currently available as Technical Preview) will be removed in favor of Kubernetes
  database operators

Removals
========

* Monasca was deprecated in Kolla. In preparation for the introduction of Monasca in OSISM
  (which will no longer happen after deprecation), three infrastructure services required only
  by Monasca have already been built as images: Kafka, Storm, and Zookeeper. These images were
  removed without prior deprecation as they were only available for the planned Monasca
  integration and are not yet in use anywhere.

Housekeeping
============

* In all ``docker-compose.yml`` files the declaration of the version was removed. This is no
  longer necessary in the latest
  `Compose specification <https://docs.docker.com/compose/compose-file/>`_.

References
==========

OpenStack Zed press announcement: https://www.openstack.org/software/zed/

OpenStack Zed release notes:

* Aodh: https://docs.openstack.org/releasenotes/aodh/zed.html
* Barbican: https://docs.openstack.org/releasenotes/barbican/zed.html
* Ceilometer: https://docs.openstack.org/releasenotes/ceilometer/zed.html
* Cinder: https://docs.openstack.org/releasenotes/cinder/zed.html
* Cloudkitty: https://docs.openstack.org/releasenotes/cloudkitty/zed.html
* Designate: https://docs.openstack.org/releasenotes/designate/zed.html
* Glance: https://docs.openstack.org/releasenotes/glance/zed.html
* Heat: https://docs.openstack.org/releasenotes/heat/zed.html
* Horizon: https://docs.openstack.org/releasenotes/horizon/zed.html
* Ironic: https://docs.openstack.org/releasenotes/ironic/zed.html
* Keystone: https://docs.openstack.org/releasenotes/keystone/zed.html
* Manila: https://docs.openstack.org/releasenotes/manila/zed.html
* Neutron: https://docs.openstack.org/releasenotes/neutron/zed.html
* Nova: https://docs.openstack.org/releasenotes/nova/zed.html
* Octavia: https://docs.openstack.org/releasenotes/octavia/zed.html
* Overview: https://releases.openstack.org/zed/index.html
* Placement: https://docs.openstack.org/releasenotes/placement/zed.html
* Senlin: https://docs.openstack.org/releasenotes/senlin/zed.html
